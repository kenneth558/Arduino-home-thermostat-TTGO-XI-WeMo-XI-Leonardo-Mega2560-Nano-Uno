..
A way to save talkbacks into a file in Linux is: (except change "TIME_STAMP_THIS" to lower case, not shown so this won't get filtered in by such command)
    nohup stty igncr -F $(ls /dev/ttyA* /dev/ttyU* 2>/dev/null|tail -n1) 57600 -echo;while true;do cat $(ls /dev/ttyA* /dev/ttyU* 2>/dev/null|tail -n1)|while IFS= read -r line;do if ! [[ -z "$line" ]];then echo "$line"|sed 's/^TIME_STAMP_THIS/'"$(date )"'/g';fi;done;done >> /log_directory/arduino.log 2>/dev/null &
.
time_stamp_this New power up:
Version: 0.6
Operating mode (heat/cool/auto/off)=auto
Fan mode=auto
heat start low temp=22.4
heat stop high temp=23.0
cool stop low temp=21.5
cool start high temp=22.1
Logging talkback is turned on
Talkback of temp changes is turned on
primary, secondary indoor temp sensor pins=2, 8
outdoor temp sensor1, 2 pins=10, 11
heat, fan, cool pins=3, 4, 9
host/aux system power_cycle_pin=5
LED_BUILTIN pin=13
.
Pin numbers may otherwise be period (all pins) with +/-/! for setting and forcing reserved pins
Example: pin set to output .-! (results in all pins [.] being set to output with low logic level [-], even reserved pins [!])
Valid commands (cAsE sEnSiTiVe):
.
help (re-display this screen)
ther[mostat][ a[uto]/ o[ff]/ h[eat]/ c[ool]] (to read or set thermostat mode)
fan[ a[uto]/ o[n]] (to read or set fan)
heat start low temp[ <°C>] (to turn heat on at this or lower temperature, always persistent)
heat stop high temp[ <°C>] (to turn heat off at this or higher temperature, always persistent)
cool stop low temp[ <°C>] (to turn A/C off at this or lower temperature, always persistent)
cool start high temp[ <°C>] (to turn A/C on at this or higher temperature, always persistent)
heat temps[ <°C>] (adjust heat settings up, use - for down)
cool temps[ <°C>] (adjust cool settings up, use - for down)
all temps[ <°C>] (adjust all temperature settings up, use - for down)
talkback[ on/off] (or logging[ on/off])
talkback temp change[s[ on/off]] (or logging temp changes[ on/off])(requires normal talkback on)
report master room temp
power cycle (or cycle power)
read pin <pin number or .> (or ...pin read...)(obtain the name if any, setting and voltage)
read pins (or pins read )(obtain the names, settings and voltages of ALL pins)
read sens[or] <pin number or .> (retrieves sensor reading, a period with due care in place of pin number for all pins)
set pin [to] output <pin number or .> (or ...pin set)
set pin [to] input <pin number or .> [pers] (or ...pin set...)
set pin [to] input with pullup <pin number or .> [pers] (or ...pin set...)
set pin [to] low <pin number or .> [pers] (or ...pin set...)(only allowed to pins assigned as output)
set pin [to] high <pin number or .> [pers] (or ...pin set...)(only allowed to pins assigned as output)
ch[ange] pers[istent memory] <address> <value> (changes EEPROM, see source code for addresses of data)
ch[ange] pers[istent memory] <StartingAddress> "<character string>["[ 0]] (store character string in EEPROM as long as desired, optional null-terminated. Reminder: echo -e and escape the quote[s])
vi[ew] pers[istent memory] <StartingAddress>[ <EndingAddress>] (views EEPROM)
assign pins (from EEPROM)
test alert (sends an alert message for testing)
